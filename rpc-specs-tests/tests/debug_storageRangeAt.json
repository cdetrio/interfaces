{
  "title" : "debug_storageRangeAt",

  "schema": {
    "$ref": "../schemas/debug_storageRangeAt.json"
  },

  "chainConfig" : {
    "$ref": "../configs/bcRPC_API_Test.json"
  },

  "tests": [
    {
      "title": "debug_storageRangeAt experimental method",
      "request" : {
        "method" : "debug_storageRangeAt",
        "params" : ["0x71d59849ddd98543bdfbe8548f5eed559b07b8aaf196369f39134500eab68e53", 0, "0x6295ee1b4f6dd65047762f924ecd367c17eabf8f", "0x", "0x2b", 8]
      },
      "expectedResponse" : {
        "result": {
          "storage": [
            {
              "hashedKey": "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563",
              "value": "0x000000000000000000000000000000000000000000000000000000008308fa01",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000"
            },
            {
              "hashedKey": "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000001"
            },
            {
              "hashedKey": "0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace",
              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000002"
            },
            {
              "hashedKey": "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b",
              "value": "0xaabbccffffffffffffffffffffffffffffffffffffffffffffffffffffffffee",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000003"
            },
            {
              "hashedKey": "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b",
              "value": "0xaabbccffffffffffffffffffffffffffffffffffffffffffffffffffffffffee",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000004"
            }
          ],
          "complete": true
        }
      },
      "asserts": [
        {
          "description": "response is not empty",
          "program": ".receivedResponse.result != null"
        },
        {
          "description" : "key 0x00 should be first result in the array",
          "program" : ".receivedResponse.result.storage[0].key == .expectedResponse.result.storage[0].key"
        },
        {
          "description" : "storage values at 0x00 should be equal",
          "program" : ".receivedResponse.result.storage[0].value == .expectedResponse.result.storage[0].value"
        }
      ]
    },
    {
      "title": "debug_storageRangeAt for block that doesn't exist",
      "request" : {
        "method" : "debug_storageRangeAt",
        "params" : ["0x878a132155f53adb7c993ded4cfb687977397d63d873fcdbeb06c18cac907a5c", 0, "0x6295ee1b4f6dd65047762f924ecd367c17eabf8f", "0x", "0x2b", 8]
      },
      "expectedResponse" : {
        "error": {
          "message": "block 878a132155f53adb7c993ded4cfb687977397d63d873fcdbeb06c18cac907a5c not found",
          "code": -32000
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description" : "response should have error code -32000",
          "program" : ".receivedResponse.error.code == .expectedResponse.error.code"
        },
        {
          "description" : "response should have error message block not found",
          "program" : ".receivedResponse.error.message == .expectedResponse.error.message"
        }
      ]
    },
    {
      "title": "debug_storageRangeAt no parameter",
      "request" : {
        "method" : "debug_storageRangeAt",
        "params" : [],
        "shouldFailSchema": true
      },
      "expectedResponse" : {
        "error": {
          "message": "missing value for required argument 0",
          "code": -32602
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description": "error code should be -32602",
          "program": ".receivedResponse.error.code == .expectedResponse.error.code"
        }
      ]
    }
  ]
}
