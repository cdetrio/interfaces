{
  "title" : "eth_getUncleByBlockHashAndIndex",

  "schema": {
    "$ref": "../schemas/eth_getUncleByBlockHashAndIndex.json"
  },

  "chainConfig" : {
    "$ref": "../configs/bcRPC_API_Test.json"
  },

  "tests": [
    {
      "title": "eth_getUncleByBlockHashAndIndex uncle at index 0",
      "request" : {
        "method" : "eth_getUncleByBlockHashAndIndex",
        "params" : ["0x4e9a67b663f9abe03e7e9fd5452c9497998337077122f44ee78a466f6a7358de", "0x0"]
      },
      "expectedResponse" : {
        "result": {
          "difficulty": "0x20040",
          "extraData": "0x",
          "gasLimit": "0x2fefd8",
          "gasUsed": "0x0",
          "hash": "0x9fbaff6f69e4f47a09fb30a14baadf2435bd1ad1f1940e7e985de0b3acff4e0a",
          "logsBloom": "0x
          "miner": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
          "mixHash": "0xe970d9815a634e25a778a765764d91ecc80d667a85721dcd4297d00be8d2af29",
          "nonce": "0x64050e6ee4c2f3c7",
          "number": "0x2",
          "parentHash": "0x10aaf14a53caf27552325374429d3558398a36d3682ede6603c2c6511896e9f9",
          "receiptsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
          "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          "size": "0x1ff",
          "stateRoot": "0xee57559895449b8dbd0a096b2999cf97b517b645ec8db33c7f5934778672263e",
          "timestamp": "0x561bc2e7",
          "totalDifficulty": null,
          "transactionsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
          "uncles": []
        }
      },
      "asserts": [
        {
          "description": "response has hash",
          "program": ".receivedResponse.result.hash != null"
        },
        {
          "description" : "hashes should be equal",
          "program" : ".receivedResponse.result.hash == .expectedResponse.result.hash"
        }
      ]
    },
    {
      "title": "eth_getUncleByBlockHashAndIndex with no parameters",
      "request" : {
        "method" : "eth_getUncleByBlockHashAndIndex",
        "params" : [],
        "shouldFailSchema": true
      },
      "expectedResponse" : {
        "error": {
          "message": "missing value for required argument 0",
          "code": -32602
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description": "error code should be -32602",
          "program": ".receivedResponse.error.code == .expectedResponse.error.code"
        }
      ]
    },
    {
      "title": "eth_getUncleByBlockHashAndIndex with one parameter",
      "request" : {
        "method" : "eth_getBlockByHash",
        "params" : ["0x4e9a67b663f9abe03e7e9fd5452c9497998337077122f44ee78a466f6a7358de"],
        "shouldFailSchema": true
      },
      "expectedResponse" : {
        "error": {
          "message": "missing value for required argument 0",
          "code": -32602
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description": "error code should be -32602",
          "program": ".receivedResponse.error.code == .expectedResponse.error.code"
        }
      ]
    }
  ]
}
